digraph "o2::ITS::V11Geometry"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::ITS::V11Geometry\n|# sMicron\l# sMm\l# sCm\l# sDegree\l# sRadian\l# sGCm3\l# sKgm3\l# sKgdm3\l# sCelsius\l# sPascal\l# sKPascal\l# sEV\l# sKEV\l# sMEV\l# sGEV\l|+ V11Geometry()\l+ V11Geometry()\l+ ~V11Geometry()\l+ setDebug()\l+ setNoDebug()\l+ getDebug()\l+ sinD()\l+ cosD()\l+ tanD()\l+ intersectLines()\l+ yFrom2Points()\l+ xFrom2Points()\l+ rMaxFrom2Points()\l+ rMinFrom2Points()\l+ rFrom2Points()\l+ zFrom2MinPoints()\l+ zFrom2MaxPoints()\l+ zFrom2Points()\l+ rMaxFromZpCone()\l+ rFromZpCone()\l+ rMinFromZpCone()\l+ zFromRMaxpCone()\l+ zFromRMaxpCone()\l+ zFromRMinpCone()\l+ insidePoint()\l+ insidePoint()\l+ radiusOfCurvature()\l+ printArb8()\l+ printPcon()\l+ printTube()\l+ printTubeSeg()\l+ printConeSeg()\l+ printBBox()\l+ drawCrossSection()\l+ angleOfIntersectionWithLine()\l+ anglesForRoundedCorners()\l+ createDefaultMaterials()\l+ createMaterials()\l+ makeFigure1()\l+ intersectCircle()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{TObject\n||}",height=0.2,width=0.4,color="grey75"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::ITS::V1Layer\n||+ V1Layer()\l+ V1Layer()\l+ V1Layer()\l+ V1Layer()\l+ V1Layer()\l+ operator=()\l+ ~V1Layer()\l+ isTurbo()\l+ getStaveThick()\l+ getStaveTilt()\l+ getStaveWidth()\l+ getSensorThick()\l+ getNumberOfStaves()\l+ getNumberOfChips()\l+ getRadius()\l+ getPhi0()\l+ getZLength()\l+ getChipType()\l+ getNumberOfStavesPerParent()\l+ getNumberOfHalfStavesPer\lParent()\l+ getNumberOfModulesPerParent()\l+ getNumberOfChipsPerParent()\l+ getStaveModel()\l+ setStaveThick()\l+ setStaveTilt()\l+ setStaveWidth()\l+ setSensorThick()\l+ setNumberOfStaves()\l+ setNumberOfUnits()\l+ setRadius()\l+ setPhi0()\l+ setZLength()\l+ setChipType()\l+ setBuildLevel()\l+ setStaveModel()\l+ createLayer()\l}",height=0.2,width=0.4,color="black",URL="$df/daf/classo2_1_1ITS_1_1V1Layer.html"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{o2::ITS::V3Layer\n||+ V3Layer()\l+ V3Layer()\l+ V3Layer()\l+ operator=()\l+ ~V3Layer()\l+ hasGammaConversionRods()\l+ isTurbo()\l+ getChipThick()\l+ getStaveTilt()\l+ getStaveWidth()\l+ getSensorThick()\l+ getNumberOfStaves()\l+ getNumberOfChips()\l+ getRadius()\l+ getPhi0()\l+ getIBModuleZLength()\l+ getOBModuleZLength()\l+ getChipType()\l+ getNumberOfStavesPerParent()\l+ getNumberOfHalfStavesPer\lParent()\l+ getNumberOfModulesPerParent()\l+ getNumberOfChipsPerParent()\l+ getBuildLevel()\l+ getStaveModel()\l+ setChipThick()\l+ getGammaConversionRodDiam()\l+ getGammaConversionRodXPos()\l+ setStaveTilt()\l+ setStaveWidth()\l+ setSensorThick()\l+ setNumberOfStaves()\l+ setNumberOfUnits()\l+ setRadius()\l+ setPhi0()\l+ setChipType()\l+ setBuildLevel()\l+ setStaveModel()\l+ addGammaConversionRods()\l+ createLayer()\l}",height=0.2,width=0.4,color="black",URL="$d5/de4/classo2_1_1ITS_1_1V3Layer.html"];
}
