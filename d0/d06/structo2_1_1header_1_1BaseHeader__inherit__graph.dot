digraph "o2::header::BaseHeader"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::header::BaseHeader\n|+ magicString\l+ magicStringInt\l+ @5\l+ headerSize\l+ flags\l+ flagsNextHeader\l+ flagsUnused\l+ @7\l+ headerVersion\l+ description\l+ serialization\l+ sMagicString\l+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l|+ BaseHeader()\l+ BaseHeader()\l+ BaseHeader()\l+ size()\l+ data()\l+ next()\l+ get()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{o2::framework::DataProcessing\lHeader\n|+ startTime\l+ duration\l+ sHeaderType\l+ sVersion\l|+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ DataProcessingHeader()\l+ Get()\l}",height=0.2,width=0.4,color="black",URL="$d7/df0/structo2_1_1framework_1_1DataProcessingHeader.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::header::DataHeader\n|+ dataDescription\l+ dataOrigin\l+ reserved\l+ payloadSerializationMethod\l+ subSpecification\l+ payloadSize\l+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l|+ DataHeader()\l+ DataHeader()\l+ DataHeader()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator==()\l+ operator==()\l+ operator==()\l+ operator==()\l+ print()\l+ Get()\l}",height=0.2,width=0.4,color="black",URL="$db/d87/structo2_1_1header_1_1DataHeader.html",tooltip="the main header struct "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{o2::header::HeartbeatFrame\lEnvelope\n|+ header\l+ trailer\l+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l|+ HeartbeatFrameEnvelope()\l+ HeartbeatFrameEnvelope()\l}",height=0.2,width=0.4,color="black",URL="$d4/dfa/structo2_1_1header_1_1HeartbeatFrameEnvelope.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{o2::header::NameHeader\< N \>\n|+ sVersion\l+ sHeaderType\l+ sSerializationMethod\l|+ NameHeader()\l+ NameHeader()\l+ operator=()\l+ sHeaderType()\l+ sHeaderType()\l}",height=0.2,width=0.4,color="black",URL="$d2/dda/structo2_1_1header_1_1NameHeader.html",tooltip="an example data header containing a name of an object as a null terminated char arr. this is a template! at instantiation the template parameter determines the size of the held string array. a caveat with decoding is you have to use header::get&lt;NameHeader&lt;0&gt;&gt;(buffer) to get it out of a buffer. May improve in the future if enough people complain. "];
}
