digraph "o2::CDB::Manager"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::CDB::Manager\n|# mFactories\l# mActiveStorages\l# mSpecificStorages\l# mConditionCache\l# mIds\l# mStorageMap\l# mDefaultStorage\l# mdrainStorage\l# mOfficialStorageParameters\l# mReferenceStorageParameters\l# mRun\l# mCache\l# mLock\l# mSnapshotMode\l# mSnapshotFile\l# mOcdbUploadMode\l# mRaw\l# mCvmfsOcdb\l# mStartRunLhcPeriod\l# mEndRunLhcPeriod\l# mLhcPeriod\l# sOcdbFolderXmlFile\l# sInstance\l|+ registerFactory()\l+ hasStorage()\l+ createStorageParameter()\l+ getStorage()\l+ getActiveStorages()\l+ getStorageMap()\l+ getRetrievedIds()\l+ setDefaultStorage()\l+ setDefaultStorage()\l+ setDefaultStorage()\l+ setDefaultStorageFromRun()\l+ isDefaultStorageSet()\l+ getDefaultStorage()\l+ unsetDefaultStorage()\l+ setSpecificStorage()\l+ getSpecificStorage()\l+ setdrainMode()\l+ setdrainMode()\l+ setdrainMode()\l+ unsetdrainMode()\l+ isdrainSet()\l+ drain()\l+ setOcdbUploadMode()\l+ unsetOcdbUploadMode()\l+ isOcdbUploadMode()\l+ getCondition()\l+ getCondition()\l+ getCondition()\l+ getConditionFromSnapshot()\l+ getUri()\l+ getAllObjects()\l+ getAllObjects()\l+ getAllObjects()\l+ putObject()\l+ putObjectAny()\l+ putCondition()\l+ setCacheFlag()\l+ getCacheFlag()\l+ setLock()\l+ getLock()\l+ setRawFlag()\l+ getRawFlag()\l+ setRun()\l+ getRun()\l+ setMirrorSEs()\l+ getMirrorSEs()\l+ destroyActiveStorages()\l+ destroyActiveStorage()\l+ queryStorages()\l+ print()\l+ ~Manager()\l+ clearCache()\l+ unloadFromCache()\l+ getConditionCache()\l+ init()\l+ initFromCache()\l+ initFromSnapshot()\l+ setSnapshotMode()\l+ unsetSnapshotMode()\l+ dumpToSnapshotFile()\l+ dumpToLightSnapshotFile()\l+ getStartRunLHCPeriod()\l+ getEndRunLHCPeriod()\l+ getLHCPeriod()\l+ getCvmfsOcdbTag()\l+ diffObjects()\l+ extractBaseFolder()\l+ destroy()\l+ Instance()\l# Manager()\l# Manager()\l# operator=()\l# getStorage()\l# getActiveStorage()\l# putActiveStorage()\l# setSpecificStorage()\l# alienToCvmfsUri()\l# validateCvmfsCase()\l# getLHCPeriodAgainstAlienFile()\l# getLHCPeriodAgainstCvmfsFile()\l# cacheCondition()\l# selectSpecificStorage()\l# getId()\l# getId()\l# getId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{TObject\n||}",height=0.2,width=0.4,color="grey75"];
}
